version: '2.2'
services:

  db:
    image: geonode/postgis:11
    restart: unless-stopped
    container_name: db4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    ports:
      - 5432:5432
    labels:
        org.geonode.component: db
        org.geonode.instance.name: geonode
    volumes:
      - dbdata:/var/lib/postgresql/data
      - dbbackups:/pg_backups
    env_file:
      - .env

  geoserver:
    image: 52north/geonode-geoserver:2.17.2
    #image: geonode/geoserver:2.16.2
    restart: unless-stopped
    container_name: geoserver4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: geoserver
        org.geonode.instance.name: geonode
    depends_on:
      - db
      - data-dir-conf
    volumes:
      - geoserver-data-dir:/geoserver_data/data
      - backup-restore:/backup_restore
      - backup-restore:/backup_restore2
      - ./s3.properties:/usr/local/tomcat/webapps/geoserver/WEB-INF/classes/s3.properties
      - ./s3-geotiff-ehcache.xml:/usr/local/tomcat/webapps/geoserver/WEB-INF/classes/s3-geotiff-ehcache.xml
    env_file:
      - .env
    environment:
      - GEOSERVER_JAVA_OPTS=-Djava.awt.headless=true -Xms2G -Xmx4G -XX:PerfDataSamplingInterval=500 -XX:SoftRefLRUPolicyMSPerMB=36000 -XX:-UseGCOverheadLimit -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ParallelGCThreads=4 -Dfile.encoding=UTF8 -Djavax.servlet.request.encoding=UTF-8 -Djavax.servlet.response.encoding=UTF-8 -Duser.timezone=GMT -Dorg.geotools.shapefile.datetime=true -DGEOSERVER_CSRF_DISABLED=true -Ds3.properties.location=/usr/local/tomcat/webapps/geoserver/WEB-INF/classes/s3.properties -Ds3.caching.ehCacheConfig=/usr/local/tomcat/webapps/geoserver/WEB-INF/classes/s3-geotiff-ehcache.xml

  django:
    restart: unless-stopped
    image: 52north/geonode:3.0-k8s
    container_name: django4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
      org.geonode.component: django
      org.geonode.instance.name: geonode
    depends_on:
      - db
      - data-dir-conf
    # command: paver start_django -b 0.0.0.0:8000
    # command: uwsgi --ini uwsgi.ini
    volumes:
      - statics:/mnt/volumes/statics
      - geoserver-data-dir:/geoserver_data/data
      - backup-restore:/backup_restore
      - /home/matthes/git/fraym/fraym-dmp-design/eks/dockerfiles/gn-3.0/django/geoserver/n52/:/usr/src/app/geonode/geoserver/n52/
      - /home/matthes/git/fraym/fraym-dmp-design/eks/dockerfiles/gn-3.0/django/geoserver/n52/ingest_directory.py:/usr/src/app/geonode/base/management/commands/ingest_directory.py
      - ./data/:/tmp/for_ingestion
    env_file:
      - .env
    environment:
      - DMP_S3_BUCKET_NAME=fraym-dmp
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - DMP_S3_ACCESS_URL=http://minio:9000
      - AWS_DEFAULT_REGION=us-east-1

  geonode:
    image: 52north/geonode-nginx:production
#    image: geonode/nginx:production
    restart: unless-stopped
    container_name: nginx4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: nginx
        org.geonode.instance.name: geonode
    depends_on:
      - django
      - geoserver
    ports:
      - "80:80"
      - "443:443"
    volumes:
#      - nginx-confd:/etc/nginx
      - statics:/mnt/volumes/statics
    env_file:
      - .env

  data-dir-conf:
    image: geonode/geoserver_data:2.16.2
    restart: on-failure
    container_name: gsconf4${COMPOSE_PROJECT_NAME}
    labels:
        org.geonode.component: conf
        org.geonode.instance.name: geonode
    command: /bin/true
    volumes:
      - geoserver-data-dir:/geoserver_data/data

  minio:
    image: minio/minio:RELEASE.2021-02-19T04-38-02Z
    volumes:
      - s3data1:/data
    expose:
      - "9000"
    ports:
      - 9000:9000
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  statics:
    name: ${COMPOSE_PROJECT_NAME}-statics
  nginx-confd:
    name: ${COMPOSE_PROJECT_NAME}-nginxconfd
  geoserver-data-dir:
    name: ${COMPOSE_PROJECT_NAME}-gsdatadir
  dbdata:
    name: ${COMPOSE_PROJECT_NAME}-dbdata
  dbbackups:
    name: ${COMPOSE_PROJECT_NAME}-dbbackups
  backup-restore:
    name: ${COMPOSE_PROJECT_NAME}-backup-restore
  s3data1:
    name: ${COMPOSE_PROJECT_NAME}-s3data1
  s3data2:
    name: ${COMPOSE_PROJECT_NAME}-s3data2
